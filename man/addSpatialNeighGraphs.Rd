% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc_addSpatialNeighGraphs.R
\name{addSpatialNeighGraphs}
\alias{addSpatialNeighGraphs}
\title{Add Neighbour Graphs}
\usage{
addSpatialNeighGraphs(
  msfe,
  sample_id = TRUE,
  type = c("poly2nb", "tri2nb", "soi.graph", "gabrielneigh", "relativeneigh",
    "knearneigh", "dnearneigh"),
  style = c("raw", "W", "B", "C", "U", "minmax", "S"),
  distMod = c("raw", "idw", "exp", "dpd"),
  glist = NULL,
  alpha = 1,
  dmax = NULL,
  zero.policy = TRUE,
  sym = FALSE,
  sfe_out = TRUE,
  ...
)
}
\arguments{
\item{msfe}{The metaSFE object. (A list of SFE objects)}

\item{sample_id}{character string, TRUE or NULL specifying sample/image
identifier(s); here, TRUE is equivalent to all samples/images.}

\item{type}{The different types that you can use to generate a neighbours
graph. There are three categories; (a) Contiguity-based - "poly2nb",
(b) Graph-based - "tri2nb", "soi.graph", "gabrielneigh", "relativeneigh" and
(c) Distance-based - "knearneigh", "dnearneigh". For more information about
the individual functions visit the \code{spdep}'s documentation and vignette.}

\item{style}{default “raw”; style can take values “raw”, “W”, “B”, “C”, “U”,
“minmax”, and “S” description. Argument passed to \code{spdep}'s
\code{nb2listwdist} function. For more information about the individual
functions visit the \code{spdep}'s documentation and vignette.}

\item{distMod}{default “idw”; the intended type of distance modelling, can
take values “raw”, “idw”, “exp”, and “dpd”. Argument passed to \code{spdep}'s
\code{nb2listwdist} function. For more information about the individual
distance models visit the \code{spdep}'s documentation and vignette. It
uses the \code{nb2listw} instead of the \code{nb2listwdist} function and it
does not model the distance weights between the neighbours.}

\item{glist}{list of general weights corresponding to neighbours. Used only
when \code{(distMod == "raw")}}

\item{alpha}{default 1; a parameter for controlling the distance modelling.
Argument passed to \code{spdep}'s \code{nb2listwdist} function, see
\code{spdep}'s \code{nb2listwdist} function “Details” for more info.}

\item{dmax}{default NULL, maximum distance threshold that is required for
weight type “dpd” but optional for all other types. Argument passed to
\code{spdep}'s \code{nb2listwdist} function, see its help page for more info.}

\item{zero.policy}{default TRUE; if TRUE permit the weights list to be
formed with zero-length weights vectors description, if FALSE stop with
error for any empty neighbour sets, if NULL use global option value. Leave
it as TRUE to avoid conflict with SFE object.}

\item{sym}{a logical argument indicating whether or not neighbours should
be symmetric (if i->j then j->i) description. Used internally by the
\code{graph2nb} function and only for graph-based neighbour types.}

\item{sfe_out}{a logical argument indicating whether or not the output
should be added in the \code{colGraphs} slot of the SFE object or not.
Default is TRUE; it will be added; if FALSE a \code{listw} object is
returned.}

\item{...}{arguments that are passed down to the \code{spdep} functions
called by the \code{type} argument. To see what else is needed for the
functions to operate correctly visit the \code{spdep}'s documentation and
vignette.}
}
\value{
If \code{sfe} is set to \code{TRUE}, the function returns the updated
SpatialFeatureExperiment object with the added neighbour graph stored in
the colGraphs slot. If \code{sfe} is set to \code{FALSE}, the function
returns the generated neighbour graph as a weighted list of neighbours.
}
\description{
A function to add spatial neighbour graphs to a SpatialFeaturesExperiment
object. The function generates different types of spatial neighbour graphs
based on the coordinates of the spatial features (spots) in the object. The
generated graphs can be either raw neighbour graphs or weighted neighbour
graphs based on specified distance models. The function supports various
types of neighbour graph algorithms and distance models.
The function wraps around \code{spdep}'s neighbour functions.
}
\details{
This function adds spatial neighbour graphs to a
SpatialFeatureExperiment object. The neighbour graphs provide information
about the spatial relationships between the features (genes) in the object.
The neighbour graphs can be either raw neighbour graphs or weighted neighbour
graphs. The weighted neighbour graphs assign weights to the edges based on
distances or other measures, providing a more detailed representation of the
spatial relationships.
}
\examples{
# Load a SpatialFeatureExperiment object
data(sfe)

# Add spatial neighbour graphs in the provided SFE object
sfe <- addSpatialNeighGraphs(sfe = sfe, sample_id = "JBO019",
type = "knearneigh", style = "W", distMod = "raw", k = 6, sfe_out = TRUE)

# Get the generated neighbour graph as an object of its own
nbr_graph <- addSpatialNeighGraphs(sfe = sfe, sample_id = "JBO019",
type = "knearneigh", style = "W", distMod = "raw", k = 6, sfe_out = FALSE)

}
\author{
Eleftherios (Lefteris) Zormpas
}
