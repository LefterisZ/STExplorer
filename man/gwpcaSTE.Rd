% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gwpca_STE.R
\name{gwpcaSTE}
\alias{gwpcaSTE}
\title{Run GWPCA}
\usage{
gwpcaSTE(
  sfe,
  assay = "logcounts",
  elocat = NULL,
  vars,
  p = 2,
  k = 20,
  bw,
  kernel = "gaussian",
  adaptive = FALSE,
  scores = FALSE,
  robust = FALSE,
  cv = TRUE,
  future = FALSE,
  strategy = "sequential",
  workers = 1,
  verbose = TRUE
)
}
\arguments{
\item{sfe}{a \code{SpatialFeatureExperiment} (SFE) object.}

\item{assay}{the counts assay to be used. Defaults to "logcounts".}

\item{elocat}{a two-column numeric DataFrame object for providing evaluation
locations.}

\item{vars}{a vector of variable names to be evaluated.}

\item{p}{the order of the norm for Minkowski distance. If p = 1, represents
Manhattan distance; if p = 2, represents Euclidean distance.}

\item{k}{the number of retained components; k must be less than the number of
variables}

\item{bw}{bandwidth used in the weighting function, possibly calculated by
bw.gwpca;fixed (distance) or adaptive bandwidth(number of nearest neighbours)}

\item{kernel}{function chosen as follows:
\itemize{
\item gaussian: wgt = exp(-.5*(vdist/bw)^2)
\item exponential: wgt = exp(-vdist/bw)
\item bisquare: wgt = (1-(vdist/bw)^2)^2 if vdist < bw, wgt=0 otherwise
\item tricube: wgt = (1-(vdist/bw)^3)^3 if vdist < bw, wgt=0 otherwise
\item boxcar: wgt=1 if dist < bw, wgt=0 otherwise
}}

\item{adaptive}{if TRUE calculate an adaptive kernel where the bandwidth
corresponds to the number of nearest neighbours (i.e. adaptive distance);
default is FALSE, where a fixed kernel is found (bandwidth is a fixed
distance)}

\item{scores}{if scores = TRUE, the scores of the supplied data on the
principal components will be calculated.}

\item{robust}{if TRUE, robust GWPCA will be applied; otherwise basic GWPCA
will be applied.}

\item{cv}{If TRUE, cross-validation data will be found that are used to
calculate the cross-validation score for the specified bandwidth.}

\item{future}{Defaults to FALSE. If you already have set a \code{future}
backend then set it to true. It works as a switch to not confuse futures.}

\item{strategy}{the future plan strategy to set. More info at future::plan.
It is used only if \code{future} argument == FALSE.}

\item{workers}{the number of cores to be used. More info at future::plan.
It is used only if \code{future} argument == FALSE.}

\item{verbose}{default TRUE. Show progress bar.}
}
\value{
A list of class \code{gwpca}
}
\description{
A Geographically Weighted Principal Components Analysis function based on
\code{gwpca} function from \code{GWmodel} package. The function is re-written
and optimised to work faster and with a \code{SpatialFeatureExperimetn} (SFE)
object.
}
\examples{
# Load data -----------------------------
data(sfe)

# Set parameters ------------------------
vars <- rownames(sfe)[1:50]
bw <- 650

# Set special parameters ----------------
# Because it can be slow, we will select only a few locations to run over for
# this example.
elocat <-  colnames(sfe)[1:50]

# Run GWPCA -----------------------------
pcagw <- gwpcaSTE(sfe = sfe, elocat = elocat, vars = vars, bw = bw)

print(pcagw)

}
\author{
Eleftherios (Lefteris) Zormpas
}
