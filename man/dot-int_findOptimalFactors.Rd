% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgwc_STE.R
\name{.int_findOptimalFactors}
\alias{.int_findOptimalFactors}
\title{Internal Function: Find Optimal Number of NMF Factors}
\usage{
.int_findOptimalFactors(A, A.rand, k_range, n_cores, max.iter, loss, seed)
}
\arguments{
\item{A}{A numeric matrix representing the data to be factorized.}

\item{A.rand}{A numeric matrix representing the randomized version of the
data (\code{A}).}

\item{k_range}{A numeric vector specifying the range of factor numbers to
evaluate.}

\item{n_cores}{An integer indicating the number of cores to use for parallel
processing.}

\item{max.iter}{An integer specifying the maximum number of iterations for
NMF.}

\item{loss}{Character, either \code{"mse"} (mean squared error) or
\code{"mkl"} (mean Kullback-Leibler divergence) (default is \code{"mse"}).}

\item{seed}{An integer specifying the random seed for reproducibility}
}
\value{
A list containing:
\describe{
\item{\code{err}}{A numeric vector representing the reduction in
reconstruction error above noise for each factor.}
\item{\code{k}}{An integer representing the optimal number of factors.}
}
}
\description{
This function finds the optimal number of factors for Non-negative Matrix
Factorization (NMF) by evaluating the reconstruction errors of the input
matrix (\code{A}) and a randomized version (\code{A.rand}).
}
\details{
The function computes the reconstruction errors for a range of factors
(\code{k_range}) using the input matrix and a randomized version, and
identifies the optimal number of factors based on the difference in error
reduction.
}
\seealso{
\code{\link[NNLM]{nnmf}} for NMF calculations and
\code{\link{.int_computeErrors}} for error computation.
}
\author{
Eleftherios (Lefteris) Zormpas
}
\keyword{factor-selection}
\keyword{internal}
\keyword{nmf}
