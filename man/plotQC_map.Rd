% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc_plot.R
\name{plotQC_map}
\alias{plotQC_map}
\title{Plot Quality Control Map in a SpatialFeatureExperiment}
\usage{
plotQC_map(
  m_sfe,
  metric = c("libsize", "mito", "detected", "cellCount", "custom"),
  sample_id = NULL,
  type = c("spot", "hex"),
  colours = c("viridis", "custom"),
  col_args = list(),
  metric_name = NULL,
  metric_lab = NULL,
  ...
)
}
\arguments{
\item{m_sfe}{An object of class 'SpatialFeatureExperiment' or
'MetaSpatialFeatureExperiment' containing spatial
data.}

\item{metric}{Character vector specifying the metric, either "libsize",
"mito", "detected", or custom. If custom is selected then you
have to provide the \code{metric_name} and \code{metric_lab} arguments
too.}

\item{sample_id}{A character string specifying the sample ID for
analysis. If NULL the first sample is selected.}

\item{type}{Character vector specifying the spot type, either "spot" or
"hex".}

\item{colours}{One of "viridis" or "custom". Select between Viridis' package
colour schemes and custom colours provided by you. IMPORTANT:
Look at Details for more information.}

\item{col_args}{List of arguments to customise the map fill colour.
Default is an empty list. If you select "viridis" at the
\code{colours} argument, here you can select the colour scheme
you prefer. I.e., \code{list(option = "magma")}.}

\item{metric_name}{Character string. The custom metric's column name as
found in the \code{colData}.}

\item{metric_lab}{Character string. The title you want for the map's legend.}

\item{...}{Additional arguments to be passed to the underlying plotting
functions.}
}
\value{
A ggplot object representing the quality control map plot.
}
\description{
This function plots the quality control map plot in a
SpatialFeatureExperiment, providing options for different metrics,
sample IDs, and customisation.
}
\details{
This function plots the quality control map plot from a
SpatialFeatureExperiment. Users can specify the metric (libsize, mito,
cellCount, detected, or custom), sample ID, and customise the appearance of
the map's points.

About using custom colours:
At the moment, the function is implementing \code{scale_fill_gradientn} which
expects a gradient like the ones generated by \code{colorRampPalette}. For
example: \code{colors <- colorRampPalette(c("blue", "red"))(100)}
}
\examples{
\dontrun{
# Example usage:
data(sfe)
plotQC_map(sfe, metric = "libsize")
}

}
\seealso{
Explore the related internal functions: \code{\link{.int_getSmplIDs}}.
}
\author{
Eleftherios (Lefteris) Zormpas
}
\keyword{ggplot2}
\keyword{plotting}
\keyword{quality-control}
\keyword{scatter-plot}
\keyword{spatial}
